{"version":3,"file":"static/js/170.22034da7.chunk.js","mappings":"wRAGaA,EAAOC,EAAAA,EAAAA,IAAH,6rBA2CJC,EAAOD,EAAAA,EAAAA,EAAH,2CAIJE,EAAMF,EAAAA,EAAAA,IAAH,0CAIHG,EAAKH,EAAAA,EAAAA,GAAH,kM,uCC9CTI,EAAQC,EAAQ,MAiEtB,EA/DsB,WAAO,IAAD,EAChBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACC,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAsBJ,EAAAA,EAAAA,UAAS,MAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACKC,GAAMC,EAAAA,EAAAA,MAKJC,GAAWC,EAAAA,EAAAA,cAAY,WAEzB,OAAQH,EAAI,IAEjB,GAAE,CAACA,IAwBJ,OAtBAI,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAO,mCAAG,6GAEiBhB,EAAMiB,IAAN,6CAAgDf,EAAhD,8CAFjB,cAEAgB,EAFA,OAGNC,QAAQC,IAAIF,GAHN,SAIEZ,EAAYY,EAASG,MAJvB,uBAKAb,EAAUU,EAASG,KAAKd,OAAOe,KAAI,SAACC,EAAGC,EAAOC,GAAX,OAAmBF,EAAEG,KAAO,IAA5B,IAAkCC,KAAK,IAAIC,MAAM,GAAI,IALxF,yDASLlB,EAAO,EAAD,IACPmB,EAAAA,OAAAA,QAAkB,kLACnBC,YAAW,kBAAKjB,GAAL,GAAiB,KAXrB,0DAAH,qDAgBXG,GACH,GAAE,CAACd,EAASW,KAGL,8BAEK,OAARJ,GAAe,qCAAG,UAACd,EAAD,YACf,oBAAQoC,KAAK,QAAQC,QAlCX,kBAAMrB,GAAK,EAAX,EAkCV,WAAwC,SAAC,MAAD,IAAxC,cACA,gBAAKsB,IAAG,yCAAoC5B,EAAS6B,aAAeC,IAAI,MACxE,4BACI,kCAAK9B,EAAS+B,aAAd,QAAuB/B,EAASgC,kBAChC,sCACA,SAACxC,EAAD,UAAOQ,EAASiC,YAChB,oCACA,uBAAI/B,SARkBF,EAASkC,KAWnC,UAACzC,EAAD,YACI,oDACA,2BACI,SAACC,EAAD,WAAI,SAAC,KAAD,CAAMyC,GAAE,OAAR,qBACJ,SAACzC,EAAD,WAAI,SAAC,KAAD,CAAMyC,GAAE,UAAR,8BAGZ,SAAC,KAAD,IAlBY,QAkBK,SAAC,IAAD,CAAUC,MAAO,CAACC,QAAS,MAGvD,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const Flex = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: flex-start;\npadding: 0 15px;\npadding-top: 30px;\ngap: 48px;\nimg{\n    max-width: 100%;\n    max-height: 500px;\n}\n\n @media screen and  (max-width: 600px){\n        flex-direction: column;\n        align-items: center;\n    }\n\n    h3{\n        margin: 0;\n    }\n\n    h2{\n        margin-top: 0;\n    }\n\n    button{\n        position: absolute;\n        top: 2px;\n        left: 15px;\n        display: flex;\n    border: 0;\n    border-radius: 20px;\n    padding: 4px 12px;\n    border: 1px solid #F6AF9C;\n    cursor: pointer;\n\n    :hover{\n     background-color: #8EE0B2;\n     color: #7B1D04;\n    }\n    }\n`;\n\nexport const View = styled.p`\nmax-width: 800px;\n`; \n\nexport const Box = styled.div`\npadding: 0 15px;\n`;\n\nexport const Li = styled.li`\ncolor: #E64217;\nlist-style-type: \"→ \";\n\na{\ncolor: inherit;\nfont-weight: bold;\ntext-decoration: none; \n\n\n}\n\n:hover a{\n    text-decoration: underline;\n}\n`;\n\n","import React from 'react';\nimport { useParams, Link, useNavigate , Outlet} from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { Flex, View, Box, Li, } from './MovieDetails.styled';\nimport { IoChevronBack }  from \"react-icons/io5\";\nimport { Notfound } from 'pages/404/404';\nimport { Notify } from 'notiflix';\n\nconst axios = require('axios');\n\n const MovieDetails = () => {\n    const { movieId } = useParams();\n    const [fullInfo, setFullInfo] = useState({});\n     const [genres, setGenres] = useState('');\n     const [err, setErr] = useState(null);\n    const nav = useNavigate();\n    \n     const funcBack = () => nav(-1);\n    //  const funcHome = () => nav('/');\n     \n      const funcHome = useCallback(() => {\n        \n          return  nav('/');\n        \n    }, [nav]);\n        \n    useEffect(() => {\n    \n      const getPost = async ()=> {\n            try {\n                const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=5b6b31e1fe12fe8c46151504ff095a5b`);\n                console.log(response);\n                 await  setFullInfo(response.data);\n                await setGenres(response.data.genres.map((g, index, arr) => g.name + ', ').join('').slice(0, -2)); \n                \n            } catch (error) {\n                 \n                 setErr(error);\n                Notify.failure(`${'Возврат на главную через 3 секунды'}`);\n               setTimeout(()=> funcHome(), 3000);\n                \n            }\n               \n        }\n        getPost();\n    }, [movieId, funcHome]);\n    \n   //https://developers.themoviedb.org/3/getting-started/images  полезная инфа\n    return (<>\n        \n        {err === null ? <> <Flex key={fullInfo.id}>\n            <button type='click' onClick={funcBack}><IoChevronBack />Go back</button>\n            <img src={`https://image.tmdb.org/t/p/w500${fullInfo.poster_path}`} alt=\"\" />\n            <div>\n                <h2>{fullInfo.title ?? fullInfo.original_title}</h2>\n                <h3>Overview</h3>\n                <View>{fullInfo.overview}</View>\n                <h3>Genres</h3>\n                <p>{genres}</p>\n            </div>\n        </Flex >\n            <Box>\n                <h4>Additional information</h4>\n                <ul>\n                    <Li><Link to={`cast`}>Cast</Link></Li>\n                    <Li><Link to={`reviews`} >Reviews</Link></Li>\n                </ul>\n            </Box>\n            <Outlet /> </> : <Notfound style={{opacity: 1}} />}\n              \n        </> );\n};\n \nexport default MovieDetails;"],"names":["Flex","styled","View","Box","Li","axios","require","movieId","useParams","useState","fullInfo","setFullInfo","genres","setGenres","err","setErr","nav","useNavigate","funcHome","useCallback","useEffect","getPost","get","response","console","log","data","map","g","index","arr","name","join","slice","Notify","setTimeout","type","onClick","src","poster_path","alt","title","original_title","overview","id","to","style","opacity"],"sourceRoot":""}